{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "import numpy as np\n",
    "import re\n",
    "import matplotlib.pyplot as plt"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [],
   "source": [
    "data_gpt = pd.read_csv(\"../data/aut_gpt.csv\")\n",
    "data_gpt = data_gpt[data_gpt[\"gpt4o_episodic\"].notnull()]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "def extract_number_in_braces(text):\n",
    "    # match = re.search(r\"\\{(\\d+)\\}\", text)\n",
    "    match = re.search(r\"[\\{\\(](\\d+)[\\}\\)]\", text)\n",
    "    return int(match.group(1)) if match else -1\n",
    "\n",
    "data_gpt[\"gpt4o_control_utility\"] = data_gpt[\"gpt4o_control\"].apply(extract_number_in_braces)\n",
    "data_gpt[\"gpt4o_semantic_utility\"] = data_gpt[\"gpt4o_semantic\"].apply(extract_number_in_braces)\n",
    "data_gpt[\"gpt4o_episodic_utility\"] = data_gpt[\"gpt4o_episodic\"].apply(extract_number_in_braces)\n",
    "\n",
    "\n",
    "print(np.corrcoef(data_gpt[\"mean_utility\"], data_gpt[\"gpt4o_control_utility\"])[0,1])\n",
    "print(np.corrcoef(data_gpt[\"mean_utility\"], data_gpt[\"gpt4o_semantic_utility\"])[0,1])\n",
    "print(np.corrcoef(data_gpt[\"mean_utility\"], data_gpt[\"gpt4o_episodic_utility\"])[0,1])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [],
   "source": [
    "data_llama = pd.read_csv(\"../data/aut_.csv\")\n",
    "data_llama = data_llama[data_llama[\"llama3_episodic\"].notnull()]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "def extract_first_number(text):\n",
    "    match = re.search(r\"(\\d+)\", text)\n",
    "    return int(match.group(1)) if match else -1\n",
    "\n",
    "data_llama[\"llama3_control_utility\"] = data_llama[\"llama3_control\"].apply(extract_first_number)\n",
    "data_llama[\"llama3_semantic_utility\"] = data_llama[\"llama3_semantic\"].apply(extract_first_number)\n",
    "data_llama[\"llama3_episodic_utility\"] = data_llama[\"llama3_episodic\"].apply(extract_first_number)\n",
    "\n",
    "\n",
    "print(np.corrcoef(data_llama[\"mean_utility\"], data_llama[\"llama3_control_utility\"])[0,1])\n",
    "print(np.corrcoef(data_llama[\"mean_utility\"], data_llama[\"llama3_semantic_utility\"])[0,1])\n",
    "print(np.corrcoef(data_llama[\"mean_utility\"], data_llama[\"llama3_episodic_utility\"])[0,1])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [],
   "source": [
    "merged_df = pd.merge(data_gpt, data_llama, on=[\"target object\", \"alternate use\", \"utility_r1\", \"utility_r2\", \"mean_utility\"], how='inner')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "# mean is worse than GPT (0.45)"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": ".env_utility_evaluation",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.12.6"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
